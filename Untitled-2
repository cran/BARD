 newfl.map<- importBardShape("flshape",gal="flshape.gal")
 kplan<-createKmeansPlan(newfl.map,20)
 combineDynamicScores(kplan,scorefuns=list(calcContiguityScore,calcPopScore,calcLWCompactScore),scorecombfun=function(x){800*x[[1]]+20*x[[2]]+x[[3]]})
 
 myScore<-function(x) {
 	  combineDynamicScores(x,scorefuns=list(calcContiguityScore,calcPopScore,calcLWCompactScore),scorecombfun=function(x){800*x[[1]]+20*x[[2]]+x[[3]]})
 }
 kplan2<-refineGreedyPlan(kplan,myScore,tracelevel=2)
 ---
 suffolk.map <- importBardShape(
      file.path(system.file("shapefiles", package="BARD"),"suffolk_tracts")
  )
  
 
 myScore<-function(x) {
 	  combineDynamicScores(x,scorefuns=list(calcContiguityScore,calcPopScore),scorecombfun=function(x){10*x[[1]]+x[[2]]})
 }
 	   kplan<-createKmeansPlan(suffolk.map,5)
 	   
 	    kplan2<-refineGreedyPlan(kplan,myScore,tracelevel=2)

 ---
 
 makeLexiScores<-function(scorefuns,ndists) {
	nfuns<-length(scorefuns)
	
	sfun <- function(scores) {
	   rscore<-0	
	   for i (1:nfuns) {
	      rscore<- rscore +
	      	scores[i]*ndist
	   }
	   return(rscore)
	}
	
	
	rfun<-function(plan,lastscore=NULL,changelist=NULL) {
		combineDynamicScores(plan,lastscore,changelist,scorefuns,discombfun=sum,scorecombfun=sfun)
	}
	return(rfun)
	
}
---
    tradelist<-unique(t(apply(tradelist,1,sort)))

